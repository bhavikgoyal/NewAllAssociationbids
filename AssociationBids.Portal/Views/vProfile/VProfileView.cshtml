@model AssociationBids.Portal.Model.ResourceModel
@using AssociationBids.Portal.Common
@{
    ViewBag.Title = "VProfileView";
    Layout = "~/Views/Shared/_VendorLayout.cshtml";
    string errror = Convert.ToString(TempData["Errormessage"]);
    string success = Convert.ToString(TempData["Sucessmessage"]);
}

<h2>VProfileView</h2>

<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDXnGGS4mlkx0DnmdnFUVLQ-0i58GSknZ8&sensor=true"></script>
<script src="~/Content/themes/assets/js/vendors/jquery-3.2.1.min.js"></script>
<script src="~/assets/plugins/fileuploads/js/dropify.js"></script>
<script src="~/assets/plugins/fileuploads/js/dropify-demo.js"></script>
<script src="~/assets/plugins/fileuploads/js/dropify.min.js"></script>
<script src="~/Content/themes/assets/plugins/bootstrap/js/bootstrap.min.js"></script>


<!-- File Uploads css-->
<link href="~/Content/themes/assets/plugins/fileuploads/css/dropify.css" rel="stylesheet" type="text/css" />
<!-- File uploads js -->
<script src="~/Content/themes/assets/plugins/fileuploads/js/dropify.js"></script>
<script src="~/Content/themes/assets/plugins/fileuploads/js/dropify-demo.js"></script>

<script src="~/assets/plugins/maps-google/map.js"></script>
<script src="~/assets/plugins/maps-google/jquery.googlemap.js"></script>
<script src="~/Content/themes/chosen.jquery.min.js"></script>

@using (Html.BeginForm("VProfile", "vProfile", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
<!-- app-content-->
<div class="app-content  my-3 my-md-5">
    <div class="side-app">

        <!-- page-header -->
        <div class="page-header">
            <ol class="breadcrumb">
                <!-- breadcrumb -->
                <li class="breadcrumb-item"><a href="~/PMDashboard/Dashboard">Home</a></li>
                <li class="breadcrumb-item active" aria-current="page">View Profile</li>
            </ol><!-- End breadcrumb -->

        </div>
        <!-- End page-header -->
        <!-- row -->
        @if (!string.IsNullOrEmpty(errror))
        {
            <div class="alert alert-danger" style=" margin-top: 20px;">
                <strong><span class="">@errror</span></strong>
            </div>
        }
        @if (!string.IsNullOrEmpty(success))
        {
            <div class="alert alert-success" style=" margin-top: 20px;">
                <strong><span class="successmessage">@success</span></strong>
            </div>
        }
        <div class="alert alert-danger" id="Error" style="display:none; margin-top: 20px;">
            <strong><span class="errormessage">@errror</span></strong>
        </div>
        <div class="alert alert-success" id="Success" style="display:none; margin-top: 20px;">
            <strong><span class="successmessage"></span></strong>
        </div>
        <div class="card-header">
            <h3 class="card-title"></h3>
            <div class="card-options">
                <a onclick=" EditPage();" class="btn btn-primary ml-auto text-white pull-right" title="Edit"><i class="fa fa-pencil"></i> Edit</a>
                <a style="margin-left: 10px;" href="#" class="card-options-collapse mr-2" data-toggle="card-collapse"><i class="fe fe-chevron-up"></i></a>
            </div>

        </div>

        <div class="row">
            <div class="col-lg-12 col-xl-12 col-md-12 col-sm-12">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">Company Information</h3>
                        <div class="card-options">
                            <div class="card-options">
                                <a style="margin-left: 10px;" href="#" class="card-options-collapse mr-2" data-toggle="card-collapse"><i class="fe fe-chevron-up"></i></a>
                            </div>
                        </div>
                    </div>
                    <div class="card-body border-top">
                        @Html.HiddenFor(Model => Model.ResourceKey)
                        @Html.HiddenFor(Model => Model.Address)
                        @Html.HiddenFor(Model => Model.Address2)
                        @Html.HiddenFor(Model => Model.City)
                        @Html.HiddenFor(Model => Model.Zip)
                        @Html.HiddenFor(Model => Model.ResourceTypeKey)
                        <div class="row">
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="form-label">Title:</label>

                                    <p>
                                        @Html.DisplayFor(Model => Model.Title)
                                    </p>
                                </div>
                            </div><!-- end of col -->
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="form-label">First Name:</label>
                                    <p>@Html.DisplayFor(Model => Model.FirstName, new { @class = "form-control" })</p>
                                </div>
                            </div><!-- end of col -->
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="form-label">Last Name:</label>
                                    <p>@Html.DisplayFor(Model => Model.LastName, new { @class = "form-control" })</p>
                                </div>
                            </div><!-- end of col -->
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="form-label">Email:</label>
                                    <p>@Html.DisplayFor(Model => Model.Email, new { @class = "form-control", @type = "email" })</p>
                                </div>
                            </div><!-- end of col -->
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="form-label">Cell Phone:</label>
                                    <p>
                                        @*@Html.DisplayFor(Model => Model.CellPhone, new { @class = "form-control" })*@
                                        @Utility.FormatPhoneNumberHelper(Model.CellPhone)
                                    </p>
                                </div>
                            </div><!-- end of col -->
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="form-label">Work Phone 1</label>
                                    <p>
                                        @*@Html.DisplayFor(Model => Model.Work, new { @class = "form-control" })*@
                                        @Utility.FormatPhoneNumberHelper(Model.Work)
                                    </p>
                                </div>
                            </div><!-- end of col -->
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="form-label">Work Phone 2</label>
                                    <p>
                                        @*@Html.DisplayFor(Model => Model.Work2, new { @class = "form-control" })*@
                                        @Utility.FormatPhoneNumberHelper(Model.Work2)
                                    </p>
                                </div>
                            </div><!-- end of col -->


                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="form-label">Address 1:</label>
                                    <p>@Html.DisplayFor(Model => Model.Address, new { @class = "form-control" })</p>
                                </div>
                            </div><!-- end of col -->
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="form-label">Address 2:</label>
                                    <p>@Html.DisplayFor(Model => Model.Address2, new { @class = "form-control" })</p>
                                </div>
                            </div><!-- end of col -->
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="form-label">City:</label>
                                    <p>@Html.DisplayFor(Model => Model.City, new { @class = "form-control" })</p>
                                </div>
                            </div><!-- end of col -->
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="form-label">State:</label>
                                    <p>@Html.DisplayFor(Model => Model.State, new { @class = "form-control" })</p>

                                </div>
                            </div><!-- end of col -->
                            <div class="col-md-3">
                                <div class="form-group">
                                    <label class="form-label">Zip:</label>
                                    <p>@Html.DisplayFor(Model => Model.Zip, new { @class = "form-control" })</p>
                                </div>
                            </div><!-- end of col -->
                        </div>



                    </div>


                </div>
            </div>
        </div>
        <!-- row end -->
        <!-- row -->
        <div class="row">
            <div class="col-lg-12 col-xl-12 col-md-12 col-sm-12">
                <div class="card">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-lg-3 col-md-12">
                                <div class="form-group">
                                    <label class="form-label">Username</label>
                                    <p>@Html.DisplayFor(Model => Model.Email, new { @class = "form-control" })</p>
                                    @*@Html.DisplayFor(Model => Model.Username, new { @class = "form-control", @placeholder = "Username", @disabled = "disabled" })*@
                                </div>
                            </div>
                            <div class="col-lg-3 col-md-12">
                                <div class="form-group">
                                    <label class="form-label">&nbsp;</label>
                                    <button class="btn btn-primary" type="button" title="Change Password" data-toggle="modal" data-target="#divChangePassword" onclick="ClearPopup();"> <i class="fa fa-gear"></i> Change Password</button>
                                </div>
                            </div>
                            <div class="col-lg-3 col-md-12">
                                <div class="form-group">
                                    <label class="form-label">Upload Picture</label>
                                    @*<img src="~/Content/themes/assets/images/users/avatars/@Url.Content()" style="height:50px;width:100px;" />*@
                                    <img src='@Convert.ToString(Session["ProfileImageBase64"])' error="~/Content/themes/assets/images/users/avatars/19.png" alt="Profile-img" style="height:200px;width:200px;">
                                </div>
                            </div>
                        </div>
                    </div>


                </div>
            </div>
        </div>

        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">Services</h3>
                        <div class="card-options">
                            @*<a class="btn btn-success ml-auto  pull-right" style="margin-right:2px;color:white;" title="Edit" data-toggle="modal" data-target="#addService"><i class="fa fa-plus"></i></a>*@
                            @*<a onclick=" EditPage('services');" class="btn btn-primary ml-auto text-white pull-right" title="Edit"><i class="fa fa-pencil"></i> Edit</a>*@
                            <a style="margin-left: 10px;" href="#" class="card-options-collapse mr-2" data-toggle="card-collapse"><i class="fe fe-chevron-up"></i></a>
                        </div>
                    </div>
                    <div class="card-body border-top">

                        <div class="table-responsive" id="divservc">
                            <table id="dataTableExample" class="table table-striped table-bordered w-100 dataTable no-footer">
                                <thead>
                                    <tr>
                                        <th>Title</th>
                                        @*
                                        <th width="5%"></th>*@
                                    </tr>
                                </thead>
                                <tbody>
                                    <tr>
                                        <td><span class="ser-fl"></span></td>
                                        @*
                                        <td align="center">
                                            <a title="Delete" onclick="removeser(this);"><i class="fe fe-trash redtxt font18"></i></a>
                                        </td>*@
                                    </tr>
                                </tbody>
                            </table>

                        </div><!-- end of table responsive -->

                    </div><!-- card body end -->
                </div><!-- card end -->
            </div><!-- col end -->
        </div><!-- row end -->
        <!-- row end -->
        <!-- row -->
        <div class="row">
            <div class="col-lg-12 col-xl-12 col-md-12 col-sm-12">
                <div class="card">
                    <div class="card-body">
                        <div class="row">
                            <div class="col-lg-3 col-md-12">
                                <div class="form-group">
                                    <label class="form-label">Radius </label>

                                    @Html.DropDownListFor(model => model.Radius, new SelectList(ViewBag.lstRadius, "Value", "Text"), new { @tabindex = "6", @class = "form-control", @onchange = "OnRadiusChanges(this)", @disabled = "disabled" })
                                </div>
                                <div class="form-group">
                                    <label class="form-label">Address</label>
                                    <p id="vServiceAddress"></p>
                                    <p>@Html.DisplayFor(Model => Model.ServiceAddress, new { @class = "form-control" })</p>

                                </div>
                            </div><!-- end of col -->
                            <div class="col-lg-9 col-md-12">
                                <div class="form-group mapIframe">
                                    <label class="form-label">Map</label>
                                    <div id="map" style="width:100%;height:300px;"></div>
                                    @*<iframe id="srcid" width="100%" height="300" frameborder="0" style="border:0;" allowfullscreen="" aria-hidden="false" tabindex="0"></iframe>*@
                                    @*<iframe id="srcid" src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d93321.45784906122!2d-76.2093204565947!3d43.035212545342986!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x89d9f39bbf979a0d%3A0xd50ce2d7ad9545!2sSyracuse%2C%20NY%2C%20USA!5e0!3m2!1sen!2sin!4v1583905479861!5m2!1sen!2sin&callback=initMap" width="100%" height="300" frameborder="0" style="border:0;" allowfullscreen="" aria-hidden="false" tabindex="0"></iframe>*@
                                </div>
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <!-- row end -->
        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">Pricing</h3>
                        <div class="card-options">
                            @*<a class="btn btn-success ml-auto  pull-right" style="margin-right:2px;color:white;" title="Edit" data-toggle="modal" data-target="#addService"><i class="fa fa-plus"></i></a>*@
                            @*<a onclick=" EditPage('services');" class="btn btn-primary ml-auto text-white pull-right" title="Edit"><i class="fa fa-pencil"></i> Edit</a>*@
                            <a style="margin-left: 10px;" href="#" class="card-options-collapse mr-2" data-toggle="card-collapse"><i class="fe fe-chevron-up"></i></a>
                        </div>
                    </div>
                    <div class="card-body border-top">
                        <div class="table-responsive" id="RawDatas">
                            <table id="dataTableExample" class="table table-striped table-bordered text-nowrap w-100 dataTable no-footer">
                                <thead>
                                    <tr>
                                        @*<th width="15%" onclick="SortingFun('StartAmount');" style="cursor: pointer;">
            Start Amount <i id="StartAmount" class="fa fa-sort-asc pull-right"></i>

        </th>
        <th width="15%" onclick="SortingFun('EndAmount');" style="cursor: pointer;">
            End Amount<i id="EndAmount" class="fa fa-sort-asc pull-right"></i>

        </th>*@

                                        <th width="15%">
                                            Pricing Type

                                        </th>
                                        <th width="15%">
                                            Fee Amounts

                                        </th>

                                        @*<th width="15%" onclick="SortingFun('Company');" style="cursor: pointer;">
            Company<i id="Company" class="fa fa-sort-asc pull-right"></i>

        </th>*@
                                        @*<th width="15%">
            Sort Order

        </th>*@
                                        @*<th width="5%">&nbsp;</th>*@
                                    </tr>
                                </thead>
                                <tbody>

                                    <tr>
                                        @*<td>$<span class="StartAmount"></span></td>
        <td>$<span class="EndAmount"></span></td>*@
                                        <td><span class="PricingType"></span></td>
                                        <td><span class="FeeAmount"></span></td>

                                        @*<td><span class="Company"></span></td>*@
                                        @*<td><span class="SortOrder"></span></td>*@
                                        @*<td align="center"><a id="viewdata" title="View Details" role="button"><i class="fe fe-eye font18"></i></a></td>*@
                                    </tr>
                                </tbody>
                            </table>
                            <div class="pull-left">
                                <label><span class="spnToRecs">0</span> to <span class="spnOfRecs">0</span> out of <span class="spnTotalRecs">0</span>&nbsp; Records </label>
                            </div>
                            <div class="dataTables_paginate paging_simple_numbers pull-right" id="pagin">
                                <ul class="pagination"></ul>

                            </div>
                        </div>
                        <div class="pagination" style="display:none;">
                            <input type="hidden" id="HdnSortValue" value="order by pr.SortOrder asc" />
                            <input type="hidden" id="HdnPageIndex" value="1" />
                            <input type="hidden" id="HdnAdvanceSearch" value="" />


                            <input type="hidden" id="StartAmounthdn" value="asc" />
                            <input type="hidden" id="EndAmounthdn" value="asc" />
                            <input type="hidden" id="FeeAmounthdn" value="asc" />
                            <input type="hidden" id="PricingTypehdn" value="asc" />
                            @*<input type="hidden" id="Companyhdn" value="asc" />*@
                            <input type="hidden" id="SortOrderhdn" value="asc" />
                            <input type="hidden" id="TotalPageRecord" value='0' />

                            @*<input type="hidden" id="incremSlide" value='5' />
                            <input type="hidden" id="startPage" value='0' />
                            <input type="hidden" id="numberPage" value='0' />*@
                        </div>
                    </div><!-- card body end -->
                </div><!-- card end -->
            </div><!-- col end -->
        </div><!-- row end -->

        <div class="row">
            <div class="col-12">
                <div class="card">
                    <div class="card-header">
                        <h3 class="card-title">Membership</h3>
                        <div class="card-options">
                            @*<a class="btn btn-success ml-auto  pull-right" style="margin-right:2px;color:white;" title="Edit" data-toggle="modal" data-target="#addService"><i class="fa fa-plus"></i></a>*@
                            @*<a onclick=" EditPage('services');" class="btn btn-primary ml-auto text-white pull-right" title="Edit"><i class="fa fa-pencil"></i> Edit</a>*@
                            <a style="margin-left: 10px;" href="#" class="card-options-collapse mr-2" data-toggle="card-collapse"><i class="fe fe-chevron-up"></i></a>
                        </div>
                    </div>
                    <div class="card-body border-top">
                        <div class="form-div">
                            <div class="row">
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="form-label">Start Date:</label>
                                        <p>
                                            @*@Html.DisplayFor(item => item.RenewalDate.ToString("MM/dd/yyyy"))*@

                                            <span id="StartDate"></span>

                                        </p>
                                    </div>
                                    <div class="form-group">
                                        <label class="form-label">End Date:</label>
                                        <p>
                                            @*@Html.DisplayFor(item => item.RenewalDate.ToString("MM/dd/yyyy"))*@

                                            <span id="EndDate"></span>

                                        </p>
                                    </div>
                                    <div class="form-group">
                                        <label class="form-label">Renewal Date:</label>
                                        <p>
                                            @*@Html.DisplayFor(item => item.RenewalDate.ToString("MM/dd/yyyy"))*@

                                            <span id="RenewalDate"></span>

                                        </p>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    &nbsp;
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="form-label">Membership status:</label>
                                        <label id="MemberIsActive"></label>
                                    </div>
                                </div>
                                <div class="col-md-6">
                                    &nbsp;
                                </div>
                                <div class="col-md-6">
                                    <div class="form-group">
                                        <label class="form-label">Billing Method:</label>
                                        <p>
                                            Credit Card - <label id="MaskedCCNumber"></label>
                                            
                                            <span id="AutoRenewal"></span>
                                            
                                        </p>
                                    </div>
                                </div>
                                <div class="col-md-6">

                                </div>
                            </div>
                        </div>
                    </div><!-- card body end -->
                </div><!-- card end -->
            </div><!-- col end -->
        </div><!-- row end -->
    </div>

        <!--footer-->
        <!-- End Footer-->
        <!-- modal -->
        <div class="modal  bd-example-modal-lg" tabindex="-1" role="dialog" aria-hidden="true">
            <div class="modal-dialog modal-lg">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel2">Enter Project Details</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">×</span>
                        </button>
                    </div>
                    <div class="card-body">
                        <form>
                            <div class="form-group">
                                <label for="listname">Project name</label>
                                <input type="text" class="form-control" name="listname" id="listname" placeholder="Enter your listname">
                            </div>
                            <div class="form-group">
                                <label for="listname">Backend</label>
                                <select name="Language" id="select-Language" class="form-control custom-select">
                                    <option value="ph" data-data="">PHP</option>
                                    <option value="aj" data-data="">Angular js</option>
                                    <option value="jv" data-data="">Java</option>
                                    <option value="nt" data-data="" selected="">.Net</option>
                                    <option value="py" data-data="">Phython</option>
                                    <option value="js" data-data="">Javascript</option>
                                    <option value="ui" data-data="">UI Design</option>
                                </select>
                            </div>
                            <div class="form-group">
                                <label>Deadline</label>
                                <input type="Date" name="Date" class="form-control">
                            </div>
                            <div class="form-group">
                                <label for="listname">Team Members</label>
                                <input type="text" class="form-control" name="listname" id="listname2" placeholder="How many Team memebers?">
                            </div>
                            <div class="form-group">
                                <label for="listname">Description</label>
                                <textarea class="form-control" name="example-textarea-input" rows="3" placeholder="text here.."></textarea>
                            </div>
                            <div class="form-group">
                                <label>Add a list item</label>
                                <div class="custom-file">
                                    <input type="file" class="custom-file-input" name="example-file-input-custom">
                                    <label class="custom-file-label">Choose file</label>
                                </div>
                            </div>
                            <div class="form-group text-center">
                                <button type="submit" class="btn btn-block bg-info text-white">Update</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
        <!-- modal end -->
        <!-- modal -->
        @*<div class="modal  bd-example-modal-lg" tabindex="-1" role="dialog" aria-hidden="true" id="divChangePassword">
            <div class="modal-dialog modal-md">
                <div class="modal-content">
                    <div class="modal-header">
                        <h5 class="modal-title" id="exampleModalLabel2">Change Password</h5>
                        <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                            <span aria-hidden="true">×</span>
                        </button>
                    </div>*@

                    <div class="modal fade" id="divChangePassword" tabindex="-1" role="dialog" aria-labelledby="deletevendor" aria-hidden="true">
                        <div class="modal-dialog modal-md" role="document">
                            <div class="modal-content">
                                <div class="modal-header">
                                    <h5 class="modal-title" id="exampleModalLabel2">Change Password</h5>
                                    <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                                        <span aria-hidden="true">×</span>
                                    </button>
                                </div>


                                <div class="card-body">
                                    <div class="alert alert-danger" style="display:none; margin-top: 20px;" id="divErrorChangePassword">
                                        <strong><span class="spanerrormodal"></span></strong>
                                    </div>
                                    <form>
                                        <div class="form-group">
                                            <label for="listname">Old Password</label>
                                            <div class="input-group ">
                                                <span class="input-group-addon"><i class="fa fa-unlock-alt"></i></span>
                                                @Html.Password("OldPassword", "", new { @class = "form-control", @tabindex = "1", autocomplete = "off", @required = true, @style = "width:90%;" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label>New Password</label>
                                            <div class="input-group ">
                                                <span class="input-group-addon"><i class="fa fa-unlock-alt"></i></span>
                                                @Html.Password("NewPassword", "", new { @class = "form-control", @tabindex = "2", autocomplete = "off", @required = true, @style = "width:90%;" })
                                            </div>
                                        </div>
                                        <div class="form-group">
                                            <label for="listname">Confirm Password</label>
                                            <div class="input-group ">
                                                <span class="input-group-addon"><i class="fa fa-unlock-alt"></i></span>
                                                @Html.Password("ConfirmPassword", "", new { @class = "form-control", @tabindex = "3", autocomplete = "off", @required = true, @style = "width:90%;" })
                                            </div>
                                        </div>
                                        <div class="form-group text-center">
                                            <button type="button" class="btn btn-block bg-info text-white" onclick="return updatePassword();">Update</button>
                                        </div>
                                    </form>
                                </div>
                            </div>
                        </div>
                    </div>
                    <!-- modal end -->

                    <footer class="footer">
                        <div class="container">
                            <div class="row align-items-center flex-row-reverse">
                                <div class="col-lg-12 col-sm-12   text-center">
                                    Copyright © 2020 Association Bids. All rights reserved.
                                </div>
                            </div>
                        </div>
                    </footer>
                </div>
    <!-- End app-content-->
}




<script>

    function logout() {
        window.location.href = '@Url.Action("LogOut","Login")';
        return false;
    }
    $(document).ready(function () {
        $('#Error').hide();
        $('#AutoRenewal').hide();
        $('#RenewalDate').hide();
        
        
        LoadSortTableFill();
        bindservice();
        BindMembership();
        if ('@Model.Title' != '') {
            $('#Title').val('@Model.Title');
        }
        Fillvalueview();

    });

    function bindservice() {
        
        var a = @Session["CompanyKey"];

       
        $.ajax({

            url: '@Url.Action("bindservice", "VendorManager")',
            cache: false,
            data:
            {
                CompanyKey: a,
            },
            success: function (response) {
                
                $("#divservc table tbody tr:not(:first)").remove();
                $("#divservc table tbody tr:eq(0)").show();
                for (var i = 0; i < response.length; i++) {
                    var cln = $("#divservc table tbody tr:eq(0)").clone(true);
                    $(".ser-fl", cln).html(response[i].Title);
                    $(cln).append("<input type='hidden' name='vsk' value='" + response[i].VendorServiceKey + "'/>");
                    $("#divservc table").append(cln);
                }
                $("#divservc table tbody tr:eq(0)").hide();
            }
        });
    }

    function updatePaging(TotalRecs) {
            
            $('ul.pagination').html('');
            var liClone = $('ul.pagination');
            
            var pageSize = '@System.Configuration.ConfigurationManager.AppSettings["PageSize"].ToString()';
            //var pageSize = $('#PageSize').val();
            var NoPage = 1;
            if (parseInt(TotalRecs) > parseInt(pageSize)) {
                NoPage = parseInt(parseInt(TotalRecs) / parseInt(pageSize));
                if (parseFloat(parseInt(parseInt(TotalRecs) / parseInt(pageSize))) < parseFloat(parseInt(TotalRecs) / parseInt(pageSize))) {
                    NoPage = (parseInt(parseInt(TotalRecs) / parseInt(pageSize)) + 1);
                }
            }

            var lp = 0;//parseFloat(parseInt($('#HdnPageIndex').val()) / 5);
            if (parseFloat(parseInt($('#HdnPageIndex').val()) % 5) == 0) {
                lp = ((parseInt(parseInt($('#HdnPageIndex').val()) / 5) - 1) * 5);
            } else {
                lp = parseInt(parseInt($('#HdnPageIndex').val()) / 5) * 5;
            }

            var ind = 0;

            for (var i = 1; i <= NoPage; i++) {

                if ((parseInt(lp)) < i) {
                    if (parseInt($('#HdnPageIndex').val()) > 5 && $(liClone).find('li.previous').length == 0) {
                        $(liClone).append('<li class="paginate_button previous" aria-controls="DataTables_Table_0" tabindex="0" ><a href="#" onclick="LoadPagingSortTableFill(' + "'" + (i - 1) + "'" + ')">Previous</a></li>');
                    }
                    if (ind < 5) {

                        if (i == parseInt($('#HdnPageIndex').val())) {
                            if (NoPage == 1) {
                                $(liClone).append('<li style=""><a href="#" onclick="LoadPagingSortTableFill(' + "'" + i + "'" + ')" class="current" style="border-top-left-radius: 3px !important;border-bottom-left-radius: 3px!important;border-top-right-radius: 3px!important; border-bottom-right-radius: 3px!important;">' + i + '</a></li>');
                            }
                            else {
                                $(liClone).append('<li style=""><a href="#" onclick="LoadPagingSortTableFill(' + "'" + i + "'" + ')" class="current">' + i + '</a></li>');
                            }
                        } else {

                            $(liClone).append('<li style=""><a href="#" onclick="LoadPagingSortTableFill(' + "'" + i + "'" + ')">' + i + '</a></li>');
                        }
                    } else if ($(liClone).find('li.next').length == 0) {

                        $(liClone).append('<li class="paginate_button next " aria-controls="DataTables_Table_0" tabindex="0" onclick="LoadPagingSortTableFill(' + "'" + i + "'" + ')"><a href="#">Next</a></li>');
                    }
                    ind = ind + 1;
                }
            }
        }

    function formatNumber(num, isCurrency = false) {
            
            if (isCurrency) {
                return new Number(num).toLocaleString('en-US', {
                    maximumFractionDigits: 2,
                    minimumFractionDigits: 2
                });
            }
            return new Number(num).toLocaleString('en-US', {
                maximumFractionDigits: 2
            });
        }

    function LoadPagingSortTableFill(pageIndex) {
        
        var pageSize = '@System.Configuration.ConfigurationManager.AppSettings["PageSize"].ToString()';
        $('#HdnPageIndex').val(pageIndex);
        var txtsearch = "";
        $.ajax({
            url: '@Url.Action("IndexPricingPaging", "NewPricing")',
            cache: false,
            data: {
                PageSize: pageSize,
                PageIndex: pageIndex,
                Search: txtsearch,
                Sort: $("#HdnSortValue").val()
            },
            success: function (response) {
                $('.spnOfRecs').text(0);
                $('.spnTotalRecs').text(0);
                $('.spnToRecs').text(0);

                if (parseInt(response.length) > 0) {

                    var curRecords = 0;
                    var TotalRecs = 0;
                    var spnToRecs = 0;

                    curRecords = parseInt(($('#HdnPageIndex').val()) * parseInt(pageSize));
                    curRecords = curRecords - (pageSize - parseInt(response.length));
                    TotalRecs = parseInt(response[0].TotalRecords);
                    $('#TotalPageRecord').val(parseInt(response[0].TotalRecords));
                    $('.spnOfRecs').text(curRecords);
                    $('.spnTotalRecs').text(TotalRecs);
                    if (curRecords === 0 || curRecords === TotalRecs) {
                        $("#ddlload").hide();
                    }
                    else {
                        $("#ddlload").show();
                    }
                } else {
                    $("#ddlload").hide();
                }

                $("#RawDatas table tbody tr:not(:first)").remove();
                $("#RawDatas table tbody tr:eq(0)").show();
                for (var i = 0; i < response.length; i++) {
                    var table = $("#RawDatas table tbody tr:eq(0)").clone(true);
                    //$(".StartAmount", table).html(response[i].StartAmount);
                    //$(".EndAmount", table).html(response[i].EndAmount);
                    if (response[i].FeeType == "Fixed" || response[i].FeeType == null)
                        $(".FeeAmount", table).html('$' + formatNumber(response[i].Fee,true));
                    else
                        $(".FeeAmount", table).html(response[i].Fee + '%');

                    if (response[i].PricingType != "Membership Fee" && response[i].PricingType != "No Bid Fee") {
                        $(".PricingType", table).html(response[i].PricingType + " ($" + formatNumber(response[i].StartAmount, true) + " - $" + formatNumber(response[i].EndAmount, true) + ")");
                    }
                    else {
                        $(".PricingType", table).html(response[i].PricingType);
                    }
                    //$(".Company", table).html(response[i].Company);
                    //$(".SortOrder", table).html(response[i].SortOrder);

                    $("#viewdata", table).attr('href', '/NewPricing/NewPricingView?PricingKey=' + response[i].PricingKey);

                    $("#RawDatas table").append(table);
                    spnToRecs++;
                }
                $("#RawDatas table tbody tr:eq(0)").hide();

                spnToRecs = (curRecords - spnToRecs) + 1;
                if (spnToRecs > 0) {
                    $('.spnToRecs').text(spnToRecs);
                    $(".pagination").show();
                    $('#Error').hide();
                }
                else {
                    $('.spnToRecs').text(0);
                    updatePaging(TotalRecs);
                    if (TotalRecs = 'undefined') {
                        $('.errormessage').html('Data Is Not Found.');
                        $('#Error').show();
                        $("#RawDatas table thead tr:eq(0)").hide();
                        $("#RawDatas table tbody tr:eq(0)").hide();
                        $(".pagination").hide();
                    }
                }

                updatePaging(response[0].TotalRecords);

            }
        });

    }

    function LoadSortTableFill() {
            

            //var txtprice = $('#pricetype option:selected').text();
            var txtsearch = "";
            //if (txtprice != "--Please Select--") {
            //    txtsearch = txtprice;
            //}
            var pageSize = '@System.Configuration.ConfigurationManager.AppSettings["PageSize"].ToString()';
            $.ajax({
                url: '@Url.Action("IndexPricingPaging", "NewPricing")',
                cache: false,
                data: {
                    PageSize: pageSize,
                    PageIndex: $('#HdnPageIndex').val(),
                    Search: txtsearch,
                    Sort: $("#HdnSortValue").val()
                },
                success: function (response) {

                    $('.spnOfRecs').text(0);
                    $('.spnTotalRecs').text(0);
                    $('.spnToRecs').text(0);
                    if (parseInt(response.length) > 0) {

                        var curRecords = 0;
                        var TotalRecs = 0;
                        var spnToRecs = 0;

                        
                        curRecords = parseInt(($('#HdnPageIndex').val()) * parseInt(pageSize));
                        curRecords = curRecords - (pageSize - parseInt(response.length));
                        TotalRecs = parseInt(response[0].TotalRecords);
                        $('#TotalPageRecord').val(parseInt(response[0].TotalRecords));
                        $('.spnOfRecs').text(curRecords);
                        $('.spnTotalRecs').text(TotalRecs);
                        if (curRecords === 0 || curRecords === TotalRecs) {
                            $("#ddlload").hide();
                        }
                        else {
                            $("#ddlload").show();
                        }
                    } else {
                        $("#ddlload").hide();
                    }

                    $("#RawDatas table tbody tr:not(:first)").remove();
                    $("#RawDatas table tbody tr:eq(0)").show();
                    
                    for (var i = 0; i < response.length; i++) {
                        var table = $("#RawDatas table tbody tr:eq(0)").clone(true);
                        //$(".StartAmount", table).html(response[i].StartAmount);
                        //$(".EndAmount", table).html(response[i].EndAmount);
                        if (response[i].FeeType == "Fixed" || response[i].FeeType == null)
                            $(".FeeAmount", table).html('$' + formatNumber(response[i].Fee, true));
                        else
                            $(".FeeAmount", table).html(response[i].Fee + '%');
                        if (response[i].PricingType != "Membership Fee" && response[i].PricingType != "No Bid Fee") {
                            $(".PricingType", table).html(response[i].PricingType + " ($" + formatNumber(response[i].StartAmount, true) + " - $" + formatNumber(response[i].EndAmount, true) + ")");
                        }
                        else
                        {
                            $(".PricingType", table).html(response[i].PricingType);
                        }
                            //$(".Company", table).html(response[i].Company);
                        //$(".SortOrder", table).html(response[i].SortOrder);

                        //$("#viewdata", table).attr('href', '/NewPricing/NewPricingView?PricingKey=' + response[i].PricingKey);

                        $("#RawDatas table").append(table);
                        spnToRecs++;
                    }
                    $("#RawDatas table tbody tr:eq(0)").hide();

                    spnToRecs = (curRecords - spnToRecs) + 1;
                    if (spnToRecs > 0) {
                        $('.spnToRecs').text(spnToRecs);
                        $(".pagination").show();
                        $('#Error').hide();
                    }
                    else {
                        $('.spnToRecs').text(0);
                        updatePaging(TotalRecs);
                        if (TotalRecs = 'undefined') {
                            $('.errormessage').html('Data Is Not Found.');
                            $('#Error').show();
                            $("#RawDatas table thead tr:eq(0)").hide();
                            $("#RawDatas table tbody tr:eq(0)").hide();
                            $(".pagination").hide();
                        }
                    }

                    updatePaging(response[0].TotalRecords);

                }
            });
    }

    function BindMembership() {
            debugger;

            //var txtprice = $('#pricetype option:selected').text();
            var txtsearch = "";
            //if (txtprice != "--Please Select--") {
            //    txtsearch = txtprice;
            //}
            //var pageSize = '@System.Configuration.ConfigurationManager.AppSettings["PageSize"].ToString()';
            $.ajax({
                url: '@Url.Action("Membership", "VendorManager")',
                cache: false,
                data: {
                },
                success: function (response) {
                    debugger;
                    //if (parseInt(response.length) > 0) {

                    debugger;
                    if (response.StartDate != null) {
                        $('StartDate').show();
                        //$("#StartDate").html(response.StartDate);
                        var dateString = response.StartDate.substr(6);
                        var currentTime = new Date(parseInt(dateString));
                        var month = currentTime.getMonth() + 1;
                        var day = currentTime.getDate();
                        var year = currentTime.getFullYear();
                        var date = day + "/" + month + "/" + year;
                        //alert(date);
                        if (date != '1/1/1') {
                            $("#StartDate").html(date.toString("MM/dd/yyyy"));
                            //$("#RenewalDate").html(response.RenewalDate.ToString("MM/dd/yyyy"));
                        }
                    }
                    if (response.EndDate != null) {
                        $('#EndDate').show();
                        //$("#EndDate").html(response.EndDate);
                        var dateString = response.EndDate.substr(6);
                        var currentTime = new Date(parseInt(dateString));
                        var month = currentTime.getMonth() + 1;
                        var day = currentTime.getDate();
                        var year = currentTime.getFullYear();
                        var date = day + "/" + month + "/" + year;
                        //alert(date);
                        if (date != '1/1/1') {
                            $("#EndDate").html(date.toString("MM/dd/yyyy"));
                        }
                        //$("#RenewalDate").html(response.RenewalDate.ToString("MM/dd/yyyy"));
                    }
                        if (response.RenewalDate != null) {
                            $('#RenewalDate').show();
                            //$("#RenewalDate").html(response.RenewalDate);
                            var dateString = response.RenewalDate.substr(6);
                            var currentTime = new Date(parseInt(dateString));
                            var month = currentTime.getMonth() + 1;
                            var day = currentTime.getDate();
                            var year = currentTime.getFullYear();
                            var date = day + "/" + month + "/" + year;
                            if (date != '1/1/1') {
                                $("#RenewalDate").html(date.toString("MM/dd/yyyy"));
                            }
                            //alert(date);
                            //$("#RenewalDate").html(response.RenewalDate.ToString("MM/dd/yyyy"));
                        }
                        if (response.CurrentDate > response.RenewalDate) {
                            $("#MemberIsActive").html("InActive");
                        }
                        else {
                            $("#MemberIsActive").html("Active");
                        }
                        $("#MaskedCCNumber").html(response.MaskedCCNumber);

                        //if (response[0].AutomaticRenewal == true) {
                            $('#AutoRenewal').show();
                            $("#AutoRenewal").html('(Auto Renewal)');
                        //}

                    //}
                }
            });
        }

    function validation() {
        
        $('#loader').show();
        $('.errormessage').html('');

        //if ($('#Username').val() == "") {
        //    $('.errormessage').html('Please Enter UserName.');
        //    $('#Error').show();
        //    $('#Username').focus();
        //    $(window).scrollTop(0);
        //    return false;
        //}

        if ($('#State').val() == "0") {
            $('.errormessage').html('Please Select State.');
            $('#Error').show();
            $(window).scrollTop(0);
            return false;
        }

        if ($('#Email').val() == "") {
            $('.errormessage').html('Please Enter Email.');
            $('#Error').show();
            $('#Email').focus();
            $(window).scrollTop(0);
            return false;
        }

        var postdata = $('form')[0];
        var file = document.getElementById('ProfilePicture').files[0];
        var fd = new FormData();
        postdata.append("files", file);
        //var xhr = new XMLHttpRequest();
        //xhr.open("POST", "/Home/Index", false);
        //xhr.send(fd);

        $('#loader').hide();

        return true;
    }

    function updatePassword() {

        $('#loader').show();
        $('#divErrorChangePassword').hide();
        $('#divErrorChangePassword').find('span.spanerrormodal').html('');

        if ($('#OldPassword').val() == '') {
            $('#divErrorChangePassword').show();
            $('#divErrorChangePassword').find('span.spanerrormodal').html('Old password required.');
            return false;
        }

        if ($('#ConfirmPassword').val() != $('#NewPassword').val()) {
            $('#divErrorChangePassword').show();
            $('#divErrorChangePassword').find('span.spanerrormodal').html('New password and confirm password should be same.');
            return false;
        }
        if ($('#ConfirmPassword').val() == '' || $('#NewPassword').val() == '') {
            $('#divErrorChangePassword').show();
            $('#divErrorChangePassword').find('span.spanerrormodal').html('New password and confirm password should not be blank.');
            return false;
        }


        $('#Success').hide();
        $('#Success').find('span.successmessage').html('');

        $.ajax({
            url: '@Url.Action("SavePassword", "vProfile")',
            data: { 'OldPassword': $('#OldPassword').val(), 'NewPassword': $('#NewPassword').val() },
            async: false,
            success: function (res) {
                if (res.indexOf('Success') >= 0) {
                    $('#Success').show();
                    $('#Success').find('span.successmessage').html('Password has been changed successfully.');
                    $('button.close').click();
                   
                } else {
                    $('#divErrorChangePassword').show();
                    $('#divErrorChangePassword').find('span.spanerrormodal').html(res);
                }
                $('#loader').hide();
            }
        });
        return false;
    }
    function EditPage() {

        window.location.href = 'vProfile?ResourceKey=' + $("#ResourceKey").val();

    }

    function Fillvalueview() {

        var valaddress = '@ViewBag.address';
        var valaddress2 = '@ViewBag.address2';
        var valCity = '@ViewBag.City';
        var valZip = '@ViewBag.Zip';

        $('#ServiceAddress').val(valaddress + ' ' + valaddress2);
        $('#vServiceAddress').html(valaddress + ' ' + valaddress2);
        $('#vserviceaddressc').html(valaddress + ' ' + valaddress2);
        $('#vRadius').html($('#RadiusRadius option:selected').text());
        $('#vCompanyName').html($('#CompanyName').val());
        $('#vLegalName').html($('#LegalName').val());
        $('#vTaxID').html($('#TaxID').val());
        if ($('#Address2').val() !== "") {
            $('#vServiceAddress').html(valaddress + ' ' + valaddress2 + ', ' + valCity + ', ' + $('#State option:selected').text() + ' ' + valZip);
            $('#vserviceaddressc').html(valaddress + ' ' + valaddress2 + ', ' + valCity + ', ' + $('#State option:selected').text() + ' ' + valZip);
        }
        else {

            $('#vServiceAddress').html(valaddress + ' ' + valaddress2 + ', ' + valCity + ', ' + $('#State option:selected').text() + ' ' + valZip);
            $('#vserviceaddressc').html(valaddress + ' ' + valaddress2 + ', ' + valCity + ', ' + $('#State option:selected').text() + ' ' + valZip);
        }
        $('#vAddress').html(valaddress);
        $('#vAddress2').html(valaddress2);
        $('#vCity').html(valCity);
        $('#vStateKey').html($('#StateKey').val());
        $('#vState').html($('#State').val());
        $('#vZip').html($('#Zip').val());
        $('#vWork').html($('#Work').val());
        $('#vWork2').html($('#Work2').val());
        $('#vWebsite').html($('#Website').val());
        $('#vFax').html($('#Fax').val());
        $('#vNameOfCard').html($('#NameOfCard').val());
        $('#vfirstname').html($('#FirstName').val());
        $('#vlastname').html($('#LastName').val());
        $('#vEmail').html($('#EmailId').val());


        var policyno = $("#PolicyNumber").val();
        var files = $("#Insurancefiles")[0].files;
        //if (files.length > 0 && policyno != '')
        {
            $("#policyno").html(policyno);
            $("#insuranceamount").html($("#InsuranceAmount").val());
            $("#startdate").html($("#StartDate").val().split(" ")[0] == '1/1/0001' ? '' : $("#StartDate").val());
            $("#enddate").html($("#EndDate").val().split(" ")[0] == '1/1/0001' ? '' : $("#EndDate").val());
            $("#renewaldate").html($("#RenewalDate").val().split(" ")[0] == '1/1/0001' ? '' : $("#RenewalDate").val());
            var docnames = '';
            for (var i = 0; i < files.length; i++) {
                docnames += '<p>' + files[i].name + '</p>';
            }
            $("#docname").html(docnames);
            if (policyno != '') {
                $("#insDetails").show();
            }
            else {
                $("#insDetails").hide();
            }
        }

        if ($('#CardNumber').val() !== "") {
            const id = $('#CardNumber').val();
            var fourlastchar = id.substr(id.length - 5);
            $('#vCardNumber').html('XXXX XXXX XXXX ' + fourlastchar);
        }

        $('#vValidTillMM').html($('#ValidTillMM').val());
        $('#vValidTillYY').html($('#ValidTillYY').val());
        $('#vFullValidTill').html($('#ValidTillMM').val() + '/' + $('#ValidTillYY').val());
        $('#vCVV').html($('#CVV').val());
        $('#sucesssave').hide();
        $('#errrorssave').hide();

    }


    function OnRadiusChanges() {

        setTimeout(function () {

            initMap();
        }, 1000);
    }
    function initMap() {
        map = new google.maps.Map(document.getElementById('map'), { zoom: 10 });
        geocoder = new google.maps.Geocoder();
        codeAddress(geocoder, map);

    }

    function codeAddress(geocoder, map) {

        geocoder.geocode({ 'address': $("#vServiceAddress").html() }, function (results, status) {

            
            if (status === 'OK') {

                var str = $("#Radius option:selected").text().split(" ");
                if (str[0] === 'Please') {
                    str = '0';
                }

                var marker = new google.maps.Marker({
                    map: map,
                    position: results[0].geometry.location
                });

                var circle = new google.maps.Circle({
                    map: map,
                    radius: str[0] * 1609.344,
                    fillOpacity: 0.25,
                    fillColor: '#AA0000'
                });
                circle.bindTo('center', marker, 'position');
                map.setCenter(results[0].geometry.location);
            }

        });
    }
    function codeAddressview(geocoder, map1) {

        geocoder.geocode({ 'address': $("#vServiceAddress").html() }, function (results, status) {

            if (status === 'OK') {
                var str = $("#Radius option:selected").text().split(" ");
                if (str[0] === 'Please') {
                    str = '0';
                }

                var marker = new google.maps.Marker({
                    map: map1,
                    position: results[0].geometry.location
                });
                var circle = new google.maps.Circle({
                    map: map1,
                    radius: str[0] * 1609.344,
                    fillOpacity: 0.25,
                    fillColor: '#AA0000'
                });
                circle.bindTo('center', marker, 'position');
                map1.setCenter(results[0].geometry.location);
            }

        });
    }

    function ClearPopup() {
        $('#OldPassword').val('');
        $('#NewPassword').val('');
        $('#ConfirmPassword').val('');
        $('#divErrorChangePassword').hide();
        $('#divErrorChangePassword').find('span.spanerrormodal').html('');
    }
</script>

