@model AssociationBids.Portal.Model.VendorManagerModel

@{
    ViewBag.Title = "AproVendorEdit";
    Layout = "~/Views/Shared/_Layout.cshtml";

    if (Session["PortalKey"] == null)
    { Response.Redirect("~/", true); }
    else if (Session["PortalKey"].ToString() == "2")
    { Response.Redirect("~/PMDashboard/Dashboard", true); }
    else if (Session["PortalKey"].ToString() == "3")
    { Response.Redirect("~/VDashboard/Index", true); }
}

<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/jquery-3.4.1.js"></script>
<script type="text/javascript" src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDXnGGS4mlkx0DnmdnFUVLQ-0i58GSknZ8&sensor=true"></script>
<script src="~/Scripts/Registration/RegistrationValidation.js"></script>
<script src="~/Content/themes/chosen.jquery.min.js"></script>
<link href="~/Content/themes/chosen.min.css" rel="stylesheet" />
<script src="~/assets/plugins/fileuploads/js/dropify.js"></script>
<script src="~/assets/plugins/fileuploads/js/dropify-demo.js"></script>
<script src="~/assets/plugins/fileuploads/js/dropify.min.js"></script>
<script src="~/Content/themes/assets/plugins/bootstrap/js/bootstrap.min.js"></script>
<script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>
<script src="~/Scripts/jquery.validate.min.js"></script>
<script src="~/JSControllers/Commonfunction.js"></script>


<script src="~/Content/themes/assets/js/vendors/jquery-3.2.1.min.js"></script>
<script src="~/Scripts/jquery-3.4.1.min.js"></script>
<script src="~/Scripts/jquery-3.4.1.js"></script>

<link href="~/assets/plugins/fileuploads/css/dropify.css" rel="stylesheet" />
<link href="~/Content/themes/assets/plugins/fileuploads/css/dropify.css" rel="stylesheet" />
<link href="~/assets/plugins/fileuploads/css/dropify.min.css" rel="stylesheet" />
<script src="~/assets/plugins/fileuploads/js/dropify.js"></script>
<script src="~/assets/plugins/fileuploads/js/dropify-demo.js"></script>
<script src="~/assets/plugins/fileuploads/js/dropify.min.js"></script>
<style>
    .chosen-select placeholder_text {
        padding: 5px;
    }

    .chosen-container-multi .chosen-choices li.search-choice .search-choice-close {
        background: url('../../Content/themes/cancelimg.jpg');
    }
</style>
<h2>Vendor Edit</h2>

<!-- app-content-->
<div class="app-content  my-3 my-md-5">
    <div class="side-app">

        <!-- page-header -->
        <div class="page-header">
            <ol class="breadcrumb">
                <!-- breadcrumb -->
                <li class="breadcrumb-item"><a href="../Dashboard/Dashboard">Home</a></li>
                <li class="breadcrumb-item"><a href="../VendorManager/UnapprovedVendorList">Approval List</a></li>
                <li class="breadcrumb-item"><a href="~/VendorManager/UnapprovedVendorView?CompanyKey=@ViewBag.cid">Vendors Detail</a></li>
                <li class="breadcrumb-item active" aria-current="page">Edit Service</li>
            </ol><!-- End breadcrumb -->
        </div>
        <div class="alert alert-danger" id="Error" style="display:block; margin-top: 20px;">
            <strong><span class="errormessage"></span></strong>
        </div>

        <!-- End page-header -->

        <div class="row">

            <div class="col-12">
                <div class="card">

                    <div class="alert alert-danger" id="Error" style="display:block; margin-top: 20px;display:none;">
                        <strong><span class="errormessage"></span></strong>
                    </div>
                    <div class="alert alert-success" id="sucess" style="display:block; margin-top: 20px;display:none;">
                        <strong><span class="sucessmessage"></span></strong>
                    </div>
                    <div class="card-body">
                        <div class="row">
                            <div class="col-md-12">

                                @*<div class="text-right"><a href="@Url.Action("Delete", 'VendorManager', new { id = Model.Vendor.CompanyKey })" id="btnDelete" class="btn btn-icon btn-danger"><i class="fe fe-trash"></i> Delete</a></div>*@
                                @Html.HiddenFor(model => model.Vendor.CompanyKey)
                                @Html.HiddenFor(model => model.Vendor.VendorKey)

                            </div>
                        </div>
                        <hr />

                        @using (Html.BeginForm("VendorEdit", "VendorManager", new { CompanyKey = Model.Vendor.CompanyKey, param = Request.QueryString.Get("param") }, FormMethod.Post, new { id = "companyInfo" }))
                        {
                            @Html.HiddenFor(model => model.Vendor.CompanyKey, new { @id = "CompanyKey" })
                            <div class="row">
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label class="form-label">Company Name @Html.ValidationMessageFor(model => model.Vendor.CompanyName, "*", new { @class = "text-danger" })</label>
                                        @Html.EditorFor(model => model.Vendor.CompanyName, new { htmlAttributes = new { @class = "form-control", @tabindex = "1", autocomplete = "off", placeholder = "CompanyName", @Required = "required" } })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label class="form-label">Work Phone 1</label>
                                        @Html.EditorFor(model => model.Vendor.Work, new { htmlAttributes = new { @class = "form-control FormatPhoneNumber", @tabindex = "2", autocomplete = "off", placeholder = "Work Phone 1" } })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label class="form-label">Work Phone 2</label>
                                        @Html.EditorFor(model => model.Vendor.Work2, new { htmlAttributes = new { @class = "form-control FormatPhoneNumber", @tabindex = "3", autocomplete = "off", placeholder = "Work Phone 2" } })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label class="form-label">Fax</label>
                                        @Html.EditorFor(model => model.Vendor.Fax, new { htmlAttributes = new { @class = "form-control", @tabindex = "4", autocomplete = "off", placeholder = "Fax" } })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label class="form-label">Website</label>
                                        @Html.EditorFor(model => model.Vendor.Website, new { htmlAttributes = new { @class = "form-control", @tabindex = "5", autocomplete = "off", placeholder = "Website" } })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label class="form-label">Address 1 @Html.ValidationMessageFor(model => model.Vendor.Address, "*", new { @class = "text-danger" })</label>
                                        @Html.EditorFor(model => model.Vendor.Address, new { htmlAttributes = new { @class = "form-control", @tabindex = "6", autocomplete = "off", placeholder = "Address 1" } })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label class="form-label">Address 2</label>
                                        @Html.EditorFor(model => model.Vendor.Address2, new { htmlAttributes = new { @class = "form-control", @tabindex = "7", autocomplete = "off", placeholder = "Address 2" } })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label class="form-label">City @Html.ValidationMessageFor(model => model.Vendor.City, "*", new { @class = "text-danger" })</label>
                                        @Html.EditorFor(model => model.Vendor.City, new { htmlAttributes = new { @class = "form-control", @tabindex = "8", autocomplete = "off", placeholder = "City" } })
                                    </div>
                                </div><!-- end of col -->
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label class="form-label">State @Html.ValidationMessageFor(model => model.Vendor.State, "*", new { @class = "text-danger" })</label>
                                        @Html.DropDownListFor(model => model.Vendor.State, new SelectList(ViewBag.lststate, "Value", "Text"), new { @tabindex = "9", @class = "form-control" })
                                    </div>
                                </div><!-- end of col -->

                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label class="form-label">Zip @Html.ValidationMessageFor(model => model.Vendor.Zip, "*", new { @class = "text-danger" })</label>
                                        @Html.EditorFor(model => model.Vendor.Zip, new { htmlAttributes = new { @class = "form-control", @tabindex = "10", autocomplete = "off", placeholder = "Zip" } })
                                    </div>
                                </div><!-- end of col -->

                            </div><!-- end of row -->
                            <div class="row">
                                <div class="col-lg-12 col-xl-12 col-md-12 col-sm-12">
                                    <div class="card">
                                        <div class="card-body">
                                            <div class="row">
                                                <div class="col-lg-3 col-md-12">
                                                    <div class="form-group">
                                                        <label class="form-label">Radius </label>

                                                        @Html.DropDownList("Radius", new SelectList(ViewBag.lstRadius, "Value", "Text"), new { @tabindex = "6", @class = "form-control", @onchange = "OnRadiusChanges(this)" })
                                                    </div>
                                                    <div class="form-group">
                                                        <label class="form-label">Address</label>
                                                        <p id="vServiceAddress"></p>
                                                        <p>@Html.DisplayFor(Model => Model.ServiceAddress, new { @class = "form-control" })</p>

                                                    </div>
                                                </div><!-- end of col -->
                                                <div class="col-lg-9 col-md-12">
                                                    <div class="form-group mapIframe">
                                                        <label class="form-label">Map</label>
                                                        <div id="map" style="width:100%;height:300px;"></div>
                                                        @*<iframe id="srcid" width="100%" height="300" frameborder="0" style="border:0;" allowfullscreen="" aria-hidden="false" tabindex="0"></iframe>*@
                                                        @*<iframe id="srcid" src="https://www.google.com/maps/embed?pb=!1m18!1m12!1m3!1d93321.45784906122!2d-76.2093204565947!3d43.035212545342986!2m3!1f0!2f0!3f0!3m2!1i1024!2i768!4f13.1!3m3!1m2!1s0x89d9f39bbf979a0d%3A0xd50ce2d7ad9545!2sSyracuse%2C%20NY%2C%20USA!5e0!3m2!1sen!2sin!4v1583905479861!5m2!1sen!2sin&callback=initMap" width="100%" height="300" frameborder="0" style="border:0;" allowfullscreen="" aria-hidden="false" tabindex="0"></iframe>*@
                                                    </div>
                                                </div>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </div>

                            <div class="card-footer">
                                <div class="button-row d-flex">

                                    @Html.HiddenFor(model => model.Vendor.VendorKey)
                                    <input type="hidden" class="param" name="param" />


                                    <a href="~/VendorManager/UnapprovedVendorView?companyKey=@ViewBag.cid" class="btn btn-default" title="Cancel">Cancel</a>
                                    <button class="btn btn-sm btn-primary ml-auto" id="btnUpdate1" name="btnUpdate" type="submit" title="Update"><i class="fa fa-check-circle-o"></i> Update</button>
                                </div>
                            </div>




                        }
                        @using (Html.BeginForm("VendorEdit", "VendorManager", new { CompanyKey = Model.Vendor.CompanyKey, param = Request.QueryString.Get("param") }, FormMethod.Post, new { id = "contactInfo", onsubmit = "return validation()" }))
                        {
                            @Html.HiddenFor(model => model.Vendor.CompanyKey, new { id = "CompanyKey" })
                            <div class="row">
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label class="form-label">First Name @Html.ValidationMessageFor(model => model.Resource.FirstName, "*", new { @class = "text-danger" })</label>
                                        @Html.EditorFor(model => model.Resource.FirstName, new { htmlAttributes = new { @class = "form-control", @tabindex = "11", autocomplete = "off", placeholder = "First Name" } })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label class="form-label">Last Name @Html.ValidationMessageFor(model => model.Resource.LastName, "*", new { @class = "text-danger" })</label>
                                        @Html.EditorFor(model => model.Resource.LastName, new { htmlAttributes = new { @class = "form-control", @tabindex = "11", autocomplete = "off", placeholder = "Last Name" } })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label class="form-label">Work Phone 1</label>
                                        @Html.EditorFor(model => model.Resource.Work, new { htmlAttributes = new { @class = "form-control", @tabindex = "12", autocomplete = "off", placeholder = "Work Phone 1" } })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label class="form-label">Work Phone 2</label>
                                        @Html.EditorFor(model => model.Resource.Work2, new { htmlAttributes = new { @class = "form-control", @tabindex = "13", autocomplete = "off", placeholder = "Work Phone 2" } })
                                    </div>
                                </div>
                                <div class="col-md-3">
                                    <div class="form-group">
                                        <label class="form-label">Cell Phone</label>
                                        @Html.EditorFor(model => model.Resource.CellPhone, new { htmlAttributes = new { @class = "form-control", @tabindex = "14", autocomplete = "off", placeholder = "Cell Phone" } })
                                    </div>
                                </div>
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label class="form-label">Email @Html.ValidationMessageFor(model => model.Resource.Email, "*", new { @class = "text-danger" })</label>
                                        @Html.EditorFor(model => model.Resource.Email, new { htmlAttributes = new { @class = "form-control", @tabindex = "15", autocomplete = "off", placeholder = "Email" } })
                                    </div>
                                </div>

                            </div><!-- end of row -->
                            <div class="card-footer">
                                <div class="button-row d-flex">
                                    @Html.HiddenFor(model => model.Vendor.CompanyKey)
                                    @Html.HiddenFor(model => model.Vendor.VendorKey)
                                    <input type="hidden" id="param1" name="param" />


                                    <a href="~/VendorManager/UnapprovedVendorView?companyKey=@ViewBag.cid" class="btn btn-default" title="Cancel">Cancel</a>
                                    <button class="btn btn-sm btn-primary ml-auto" id="btnUpdate" name="btnUpdate" type="submit" onclick="return validation()" title="Update"><i class="fa fa-check-circle-o "></i> Update</button>
                                </div>

                            </div><!--end of card body -->
                        }
                        @{ List<AssociationBids.Portal.Model.VendorManagerModel> sList = new List<AssociationBids.Portal.Model.VendorManagerModel>();}
                        @using (Html.BeginForm("VendorEditForService", "VendorManager", new { CompanyKey = Model.Vendor.CompanyKey, vm = sList }, FormMethod.Post, new { id = "services" }))
                        {
                            @Html.HiddenFor(model => model.Vendor.CompanyKey, new { id = "CompanyKey" })
                            <div class="row">
                                <div class="col-md-6 m-3">
                                    @Html.DropDownListFor(model => model.Vendor.ServiceKey, new SelectList(ViewBag.lstservice, "Value", "Text"), new { @data_rel = "Choose_one", @class = "form-control", placeholder = "Please Select...", @onchange = "checkVali()" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6 m-3">
                                    @Html.DropDownListFor(model => model.Vendor.ServiceKey1, new SelectList(ViewBag.lstservice, "Value", "Text"), new { @data_rel = "Choose_one", @class = "form-control", placeholder = "Please Select...", @onchange = "checkVali()" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="col-md-6 m-3">
                                    @Html.DropDownListFor(model => model.Vendor.ServiceKey2, new SelectList(ViewBag.lstservice, "Value", "Text"), new { @data_rel = "Choose_one", @class = "form-control", placeholder = "Please Select...", @onchange = "checkVali()" })
                                </div>
                            </div>



                            <div class="card-footer">
                                <div class="button-row d-flex">
                                    @Html.HiddenFor(model => model.Vendor.CompanyKey)
                                    @Html.HiddenFor(model => model.Vendor.VendorKey)
                                    <input type="hidden" id="param1" name="param" />


                                    <a href="~/VendorManager/UnapprovedVendorView?companyKey=@ViewBag.cid" class="btn btn-default" title="Cancel">Cancel</a>
                                    <button class="btn btn-info ml-auto js-btn-next" type="button" id="btnnextservice" title="Next" onclick="return validationservice()">Update <i class="fe fe-chevron-right"></i></button>
                                    @*<button class="btn btn-sm btn-primary ml-auto" id="btnUpdate2" name="btnUpdate" type="submit" onclick="return validation()" title="Update"><i class="fa fa-check-circle-o "></i> Update</button>*@
                                </div>

                            </div><!--end of card body -->
                            <div class="table-responsive" id="managerdiv" style="display:none;">
                                <table id="dataTableExample" class="table table-striped table-bordered w-100 dataTable no-footer">

                                    <tbody>
                                        @for (int i = 0; i < ViewBag.Service.Count; i++)
                                        {
                                            <tr>
                                                <td>
                                                    <span class="manspan" id="manspanid">@ViewBag.Service[i].value</span>
                                                    <span class="manspanId" id="manspanidVal" style="display:none;"></span>
                                                </td>
                                                <td align="center"><a title="Delete" onclick="removeman(this);"><i class="fe fe-trash redtxt font18"></i></a></td>
                                            </tr>
                                        }
                                    </tbody>
                                </table>
                            </div><!-- end of table responsive -->
                        }
                        @if (Model.UserModel != null)
                        {
                            using (Html.BeginForm("UserAccountChangePassword", "VendorManager", new { UserKey = ViewBag.uid, CompanyKey = Model.Vendor.CompanyKey }, FormMethod.Post, new { id = "userAccount", onsubmit = "return validationUser()" }))
                            {
                                @Html.HiddenFor(model => model.Vendor.CompanyKey, new { id = "CompanyKey" })
                                <div class="row">
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label class="form-label">Username</label>
                                            <span>@Model.Resource.Email</span>
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label class="form-label">Password @Html.ValidationMessageFor(model => model.UserModel.Password, "*", new { @class = "text-danger" })</label>
                                            @Html.Editor("UserModel_Password", new { htmlAttributes = new { @class = "form-control", @tabindex = "15", autocomplete = "off", placeholder = "Password", id = "Password" } })
                                        </div>
                                    </div>
                                    <div class="col-md-3">
                                        <div class="form-group">
                                            <label class="form-label">Confirm Password <span style="color:red;">*</span></label>
                                            @Html.Editor("ConfirmPassword", new { htmlAttributes = new { @class = "form-control", @tabindex = "16", autocomplete = "off", placeholder = "Confirm Password" } })
                                        </div>
                                    </div>
                                </div>
                                <div class="card-footer">
                                    <div class="button-row d-flex">
                                        @Html.HiddenFor(model => model.Vendor.CompanyKey)
                                        @Html.HiddenFor(model => model.Vendor.VendorKey)
                                        <input type="hidden" id="param1" name="param" />


                                        <a href="~/VendorManager/UnapprovedVendorView?companyKey=@ViewBag.cid" class="btn btn-default" title="Cancel">Cancel</a>
                                        <button class="btn btn-sm btn-primary ml-auto" id="btnUpdateUser" name="btnUpdate" type="submit" onclick="return validation()" title="Update"><i class="fa fa-check-circle-o "></i> Update</button>
                                    </div>

                                </div><!--end of card body -->
                            }
                        }
                    </div>
                </div>
            </div>
        </div>


        <!--footer-->
        <footer class="footer">
            <div class="container">
                <div class="row align-items-center flex-row-reverse">
                    <div class="col-lg-12 col-sm-12   text-center">
                        Copyright © 2020 Association Bids. All rights reserved.
                    </div>
                </div>
            </div>
        </footer>
        <!-- End Footer-->

    </div><!--End side app-->


</div>
<!-- End app-content-->


<script>

    $(document).ready(function () {
        SetActiveMenu($("#Unap1"), false);
         $('#Error').hide();

         $("#Unap1").closest('li').addClass('active');


        Fillvalueview();

    });

    function Fillvalueview() {
        var valaddress = '@ViewBag.address';
         var valaddress2 = '@ViewBag.address2';
         var valCity = '@ViewBag.City';
        var valZip = '@ViewBag.Zip';

        $('#ServiceAddress').val(valaddress + ' ' + valaddress2);
        $('#vServiceAddress').html(valaddress + ' ' + valaddress2);
        $('#vserviceaddressc').html(valaddress + ' ' + valaddress2);
        $('#vRadius').html($('#RadiusRadius option:selected').text());
        $('#vCompanyName').html($('#CompanyName').val());
        $('#vLegalName').html($('#LegalName').val());
        $('#vTaxID').html($('#TaxID').val());
        if ($('#Address2').val() !== "") {
            $('#vServiceAddress').html(valaddress + ' ' + valaddress2 + ', ' + valCity + ', ' + $('#State option:selected').text() + '-' + valZip);
            $('#vserviceaddressc').html(valaddress + ' ' + valaddress2 + ', ' + valCity + ', ' + $('#State option:selected').text() + '-' + valZip);
        }
        else {

            $('#vServiceAddress').html(valaddress + ' ' + valaddress2 + ', ' + valCity + ', ' + $('#State option:selected').text() + '-' + valZip);
            $('#vserviceaddressc').html(valaddress + ' ' + valaddress2 + ', ' + valCity + ', ' + $('#State option:selected').text() + '-' + valZip);
        }
        $('#vAddress').html(valaddress);
        $('#vAddress2').html(valaddress2);
        $('#vCity').html(valCity);
        $('#vStateKey').html($('#StateKey').val());
        $('#vState').html($('#State').val());
        $('#vZip').html($('#Zip').val());
        $('#vWork').html($('#Work').val());
        $('#vWork2').html($('#Work2').val());
        $('#vWebsite').html($('#Website').val());
        $('#vFax').html($('#Fax').val());
        $('#vNameOfCard').html($('#NameOfCard').val());
        $('#vfirstname').html($('#FirstName').val());
        $('#vlastname').html($('#LastName').val());
        $('#vEmail').html($('#EmailId').val());


        var policyno = $("#PolicyNumber").val();
        var files = $("#Insurancefiles")[0].files;
        //if (files.length > 0 && policyno != '')
        {
            $("#policyno").html(policyno);
            $("#insuranceamount").html($("#InsuranceAmount").val());
            $("#startdate").html($("#StartDate").val().split(" ")[0] == '1/1/0001' ? '' : $("#StartDate").val());
            $("#enddate").html($("#EndDate").val().split(" ")[0] == '1/1/0001' ? '' : $("#EndDate").val());
            $("#renewaldate").html($("#RenewalDate").val().split(" ")[0] == '1/1/0001' ? '' : $("#RenewalDate").val());
            var docnames = '';
            for (var i = 0; i < files.length; i++) {
                docnames += '<p>' + files[i].name + '</p>';
            }
            $("#docname").html(docnames);
            if (policyno != '') {
                $("#insDetails").show();
            }
            else {
                $("#insDetails").hide();
            }
        }

        if ($('#CardNumber').val() !== "") {
            const id = $('#CardNumber').val();
            var fourlastchar = id.substr(id.length - 5);
            $('#vCardNumber').html('XXXX XXXX XXXX ' + fourlastchar);
        }

        $('#vValidTillMM').html($('#ValidTillMM').val());
        $('#vValidTillYY').html($('#ValidTillYY').val());
        $('#vFullValidTill').html($('#ValidTillMM').val() + '/' + $('#ValidTillYY').val());
        $('#vCVV').html($('#CVV').val());
        $('#sucesssave').hide();
        $('#errrorssave').hide();

    }


    function OnRadiusChanges() {

        setTimeout(function () {

            initMap();
        }, 1000);
    }
    function initMap() {

        map = new google.maps.Map(document.getElementById('map'), { zoom: 10 });
        geocoder = new google.maps.Geocoder();
        codeAddress(geocoder, map);

    }

    function codeAddress(geocoder, map) {
        geocoder.geocode({ 'address': $("#vServiceAddress").html() }, function (results, status) {

            if (status === 'OK') {
                var str = $("#Radius option:selected").text().split(" ");
                if (str[0] === 'Please') {
                    str = '0';
                }

                var marker = new google.maps.Marker({
                    map: map,
                    position: results[0].geometry.location
                });
                var circle = new google.maps.Circle({
                    map: map,
                    radius: str[0] * 1609.344,
                    fillOpacity: 0.25,
                    fillColor: '#AA0000'
                });
                circle.bindTo('center', marker, 'position');
                map.setCenter(results[0].geometry.location);
            }

        });
    }
    function codeAddressview(geocoder, map1) {

        geocoder.geocode({ 'address': $("#vServiceAddress").html() }, function (results, status) {

            if (status === 'OK') {
                var str = $("#Radius option:selected").text().split(" ");
                if (str[0] === 'Please') {
                    str = '0';
                }

                var marker = new google.maps.Marker({
                    map: map1,
                    position: results[0].geometry.location
                });
                var circle = new google.maps.Circle({
                    map: map1,
                    radius: str[0] * 1609.344,
                    fillOpacity: 0.25,
                    fillColor: '#AA0000'
                });
                circle.bindTo('center', marker, 'position');
                map1.setCenter(results[0].geometry.location);
            }

        });
    }


    function getUrlParameter(sParam) {
        var sPageURL = window.location.search.substring(1),
            sURLVariables = sPageURL.split('&'),
            sParameterName,
            i;

        for (i = 0; i < sURLVariables.length; i++) {
            sParameterName = sURLVariables[i].split('=');

            if (sParameterName[0] === sParam) {
                return sParameterName[1] === undefined ? true : decodeURIComponent(sParameterName[1]);
            }
        }
        return "none";
    }
    $(document).ready(function (){
        debugger;
        $('#Error').hide();
          $('#loader').show();
        $('.errormessage').html('');
        $('#contactInfo').hide();
        $('#companyInfo').hide();
        $('#services').hide();
        $('#userAccount').hide();
        var param = getUrlParameter('param');
        //$('#param').val(param);
        if (param == "contact") {
            $('#contactInfo').show();
            $('#companyInfo').hide();
            $('#services').hide();
            $('#userAccount').hide();
        } else if (param == "company") {
            $('#contactInfo').hide();
            $('#companyInfo').show();
            $('#services').hide();
            $('#userAccount').hide();
        }
        else if (param == 'services') {
            $('#contactInfo').hide();
            $('#companyInfo').hide();
            $('#services').show();
            $('#userAccount').hide();
        }
        else if (param = 'userAccount') {
            $('#contactInfo').hide();
            $('#companyInfo').hide();
            $('#services').hide();
            $('#userAccount').show();
        }
        $("#param").val(param);
        $("#param1").val(param);
        $('#loader').hide();
        var val = '@ViewBag.ErrorMessage';
        if (val != "") {

            $('.errormessage').html('Email are Already Exists');
            $('#Error').show();
            $('#Email').focus();
        }

        Services();
        $(".chosen-select").chosen();

        $("#btnUpdate").click(function () {
            debugger;
            $('#Error').hide();
            var a = $("#Vendor_CompanyKey").val();
            var param = getUrlParameter('param');
            var status = false;
            return status = validationForContact();
            //window.location.href = 'VendorEdit?CompanyKey=' + a + "&param=" + param;

        });
        $("#btnUpdate1").click(function () {
            debugger;
            $('#Error').hide();
            var a = $("#Vendor_CompanyKey").val();
            var param = getUrlParameter('param');
            var status = false;
            status = validation();
            return status;
            //window.location.href = 'VendorEdit?CompanyKey=' + a + "&param=" + param;

        });
        $("#btnUpdateUser").click(function () {
            debugger;
            $('#Error').hide();
            var a = $("#Vendor_CompanyKey").val();
            var param = getUrlParameter('param');
            var status = false;
            status = validationUser();
            return status;
            //window.location.href = 'VendorEdit?CompanyKey=' + a + "&param=" + param;

        });



        function validation() {
            debugger;
            $('#loader').show();
            $('.errormessage').html('');

            if ($('#Vendor_CompanyName').val() == "") {
                $('.errormessage').html('Please Enter Mandatory Fields.');
                $('#Error').show();
                $(window).scrollTop(0);
                return false;
            }

            else if ($('#Vendor_Address').val() == "") {
                $('.errormessage').html('Please Enter Mandatory Fields.');
                $('#Error').show();
                $(window).scrollTop(0);
                return false;
            }
            else if ($('#Vendor_City').val() == "") {
                $('.errormessage').html('Please Enter Mandatory Fields.');
                $('#Error').show();
                $(window).scrollTop(0);
                return false;
            }
            else if ($('#Vendor_State').val() == "") {
                $('.errormessage').html('Please Enter Mandatory Fields.');
                $('#Error').show();
                $(window).scrollTop(0);
                return false;
            }
            else if ($('#Vendor_Zip').val() == "") {
                $('.errormessage').html('Please Enter Mandatory Fields.');
                $('#Error').show();
                $(window).scrollTop(0);
                return false;
            }
            else {
                $('#Error').hide();
                return true;
            }
        }

    });
    function validationservice() {
        debugger;
        $('#sucess').hide();
        $('#Error').hide();
        $('#sucesssave').hide();
        $('#errrorssave').hide();
        var CompanyKey = $("#CompanyKey").val();

        var ser1 = $("#Vendor_ServiceKey").val();
        var ser2 = $("#Vendor_ServiceKey1").val();
        var ser3 = $("#Vendor_ServiceKey2").val();
        if (ser1 == 0 && ser2 == 0 && ser3 == 0) {
            $('.errormessage').html("Please select at least 1 service.");
            $('#Error').show();
            $(window).scrollTop(0);
            event.preventDefault();
            return false;
        }
        else if ((ser1 == ser2 && ser1 != 0) || (ser1 == ser3 && ser1 != 0) || (ser2 == ser3 && ser2 != 0)) {
            $('.errormessage').html("You can not re-select a service");
            $('#Error').show();
            $(window).scrollTop(0);
            event.preventDefault();
            return false;
        }

        var formData = new FormData();


        formData.append("vendorkey", $("#CompanyKey").val());
        formData.append("Service", $("#Vendor_ServiceKey").val());
        formData.append("Service", $("#Vendor_ServiceKey1").val());
        formData.append("Service", $("#Vendor_ServiceKey2").val());

        $.ajax({
            type: "POST",
            url: '/VendorManager/EditVendorService',
            contentType: false,
            processData: false,
            data: formData,
            success: function (Response) {
                if (Response == true || Response == false) {
                    window.location.href = 'UnapprovedVendorView?CompanyKey=' + CompanyKey;
                }

                //$('#global-loader').hide();
            },
            error: function (xhr, status, p3, p4) {
                var err = "Error " + " " + status + " " + p3 + " " + p4;
                if (xhr.responseText && xhr.responseText[0] == "{")
                    err = JSON.parse(xhr.responseText).Message;
                //$('#global-loader').hide();
            }
        });
        $('#Error').hide();
        return true;
    }

    function validationUser() {

        $('#loader').show();
        $('.errormessage').html('');

        if ($('#Password').val() == "") {
            $('.errormessage').html('Please Enter Mandatory Fields.');
            $('#Error').show();
            $(window).scrollTop(0);
            return false;
        }

        else if ($('#ConfirmPassword').val() == "") {
            $('.errormessage').html('Please Enter Mandatory Fields.');
            $('#Error').show();
            $(window).scrollTop(0);
            return false;
        }
        else if ($('#Password').val() != $('#ConfirmPassword').val()) {
            $('.errormessage').html('Password and ConfirmPassword not matched');
            $('#Error').show();
            $('#ConfirmPassword').focus();
            $(window).scrollTop(0);
            return false;
        }
        //else if ($('#Password').val().length <= 5 || $('#Password').val().length > 16) {
        //    $('.errormessage').html('Password length is not less than 6 or greater than 16');
        //    //alert("Please Enter Valid Email.");
        //    $('#Error').show();
        //    $('#Password').focus();
        //    $(window).scrollTop(0);
        //    return false;
        //}
    }
    function validationForContact() {

        $('#loader').show();
        $('.errormessage').html('');

        if ($('#Resource_FirstName').val() == "") {
            $('.errormessage').html('Please Enter Mandatory Fields.');
            $('#Error').show();
            $(window).scrollTop(0);
            return false;
        }

        else if ($('#Resource_LastName').val() == "") {
            $('.errormessage').html('Please Enter Mandatory Fields.');
            $('#Error').show();
            $(window).scrollTop(0);
            return false;
        }
        else if ($('#Resource_Email').val() == "") {
            $('.errormessage').html('Please Enter Mandatory Fields.');
            $('#Error').show();
            $('#Email').focus();
            $(window).scrollTop(0);
            return false;
        }
        else if (validateEmail($('#Resource_Email').val())) {
            $('.errormessage').html('Please Enter Valid Email.');
            //alert("Please Enter Valid Email.");
            $('#Error').show();
            $('#Email').focus();
            $(window).scrollTop(0);
            return false;
        }
    }

    function validateEmail(sEmail) {
        var filter = /^([\w-\.]+)@@((\[[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.)|(([\w-]+\.)+))([a-zA-Z]{2,4}|[0-9]{1,3})(\]?)$/;
        var expr = /^[a-zA-Z0-9._]+[a-zA-Z0-9]+@@[a-zA-Z0-9]+\.[a-zA-Z]{2,4}$/;
        if (filter.test(sEmail)) {
            return false;
        }
        else {
            return true;
        }

    $("#btnDelete").click(function () {
        if (confirm('Are you sure you want to delete this record?')) {

            $.ajax({
                url: '/VendorManager/Delete',
                cache: false,
                data: {
                    CompanyKey: $('#CompanyKey').val()
                },
                success: function (response) {
                    window.location.href = response.redirecturl;
                    @*if (response.status == true) {
                    alert("Deleted");
                    window.location.href = "@Url.Action("PMVendorList", "PMVendor")";
                        //RedirectToAction("PMVendorlist");
                    }*@
                }
            });
            return true;
        }
        else {
            return false;
        }

    });




    }
</script>
<script>

    function AddMan() {
        if ($('#Services').val().length != 0) {

            $('#btnUpdate2').prop('disabled', false);
        }
    }
    function Services() {
        debugger;
        var options = [];
        options.push('0');
        $('#btnUpdate2').prop('disabled', true);
        $('#ManagerChoosen1_chosen').hide();
        // $('.chosen-choices').hide();
        $('#dataTableExample tbody tr').each(function (i, e) {
            options.push($(e).find('td:eq(0)').find('#manspanid').html());
        });

        $('#Services').val(options).trigger("liszt:updated");
        $('#Services').val(options).trigger("chosen:updated");
    }
</script>



